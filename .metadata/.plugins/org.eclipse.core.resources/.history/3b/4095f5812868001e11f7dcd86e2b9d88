Rules of Big O
 
Rule number 1: Worst Case

const nemo = ['nemo', 'test', 'two', 'three', 'four'];

function findNemo(array) {
  for (let i = 0; i < array.length; i++) {
    console.log('running');
    if (array[i] == 'nemo') {
      console.log('Found Nemo');
      break;
    }
  }
}
findNemo(nemo);

even if we have found the nemo and break the loop but what will happen if it will be in the last?
	our loop will execute until we find nemo.
	
best case can be if we have nemo at the beginning and worst case will be if we have nemo at the end.

----------------------

Rule 2: Remove constants. DSA_Class_6_1.java

function printFirstItemThenFirstHalfThenSayHi100Times(items){
  console.log(items[0]);
  var middleIndex = Math.floor(items.length/2);
  var index = 0;
  while(index < middleIndex){
    console.log(items[index]);
    index++;
  }
  for(var i = 0; i < 100; i++){
    console.log('hi');
  }
}
// Big O(1 + n/2 + 100)
// Big O(n/2 + 101)
// Big O(n + 1)
// Big O(n)

